Реализуйте двухсвязный список и итератор для него.
Итератор может указывать на любой элемент списка и на элемент, следующий за последним элементом.
В пустом списке итератор указывает на элемент за последним "реальным" элементом списка.

void decIterator();
void incIterator();
Переместить итератор на 1 элемент.
Итератор может указывать на элемент за последним "реальным" элементом списка (но incIterator не будет вызван).
Если итератор указывает на первый элемент, "decIterator" не будет вызван.

void init();
Очищает список.

void erase();
Удалить текущий узел и переместить итератор на следующий. Если итератор указывает на элемент за последним "реальным" элементом списка , "erase" не будет вызван.

void addBefore(int value);
Вставить перед текущим узлом

int getValue();
Вернуть значение узла

Суммарное число вызовов до 100000.